const Field = require('../field')
const dedent = require('dedent-js')

class ConfigNodeField extends Field {
    constructor({
        type,
        displayName = null,
        required = true
    }) {
        super({ isConfigNodeField: true })
        this.type = type
        this.displayName = displayName
        this.required = required
    }

    resolveValue(RED, name, node, config, msg) {
        const cnode = RED.nodes.getNode(config[name])
        const creds = RED.nodes.getCredentials(config[name])
        return { node: cnode, creds }
    }

    registerWithNode(name, node, config) {
        return
    }

    defaultsCode(name, schema) {
        const nodeName = this.type.schema.name
        return dedent(`
            ${name}: { value: "", type: "${nodeName}", required: ${this.required} },
        `)
    }

    formCode(name, schema) {
        return dedent(`
            <div class="form-row">
                <label for="node-input-${name}">${this.displayName ? this.displayName : name}</label>
                <input type="text" id="node-input-${name}"></input>
            </div>
        `)
    }
}

module.exports = ConfigNodeField