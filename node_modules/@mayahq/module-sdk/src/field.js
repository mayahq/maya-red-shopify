class Field {
    static resolveToCredentials = false
    static configNodeField = false

    constructor({
        isConfigNodeField = false,
        forConfig = false,
        hidden = false,
        isCredential = false,
        isSdkType = true
    } = {}) {
        this.isConfigNodeField = isConfigNodeField
        this.forConfig = forConfig
        this.hidden = hidden
        this.isCredential = isCredential
        this.isSdkType = isSdkType
    }

    resolveValue(RED, name, node, config, msg) {
        throw new Error('resolveValue function not implemented')
    }

    registerWithNode(fieldName, node, config) {
        throw new Error('registerWithNode function not implemented!')
    }

    defaultsCode(fieldName, schema) {
        return ''
    }

    credentialsCode(fieldName, schema) {
        return ''
    }

    onEditPrepareCode(fieldName, schema) {
        return ''
    }

    onEditSaveCode(fieldName, schema) {
        return ''
    }

    onEditCancelCode(fieldName, schema) {
        return ''
    }

    onEditDeleteCode(fieldName, schema) {
        return ''
    }

    onEditResizeCode(fieldName, schema) {
        return ''
    }

    onPaletteAddCode(fieldName, schema) {
        return ''
    }

    onPaletteRemoveCode(fieldName, schema) {
        return ''
    }

    formCode(fieldName, schema) {
        return ''
    }
}

module.exports = Field