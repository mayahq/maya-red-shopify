import { StorageBlock, StorageCollection, DatabaseTree } from '../../storage/storage';
import { AsyncFunction, blockCreateOpts, ioClient } from "../io";
export declare class FileIOClient implements ioClient {
    encryptionKey: string;
    constructor({ encryptionKey }: {
        encryptionKey: string;
    });
    ensureHierarchy(tree: DatabaseTree, absPath: string): Promise<void>;
    validateBlockPath(blockPath: string): Promise<void>;
    validateCollectionPath(absPath: string): Promise<void>;
    includesCollection(absPath: string): Promise<boolean>;
    includesBlock(blockPath: string): Promise<boolean>;
    readFromBlock(blockPath: string): Promise<any>;
    writeToBlock(blockPath: string, data: any): Promise<any>;
    acquireLockOnBlock(blockPath: string, callback: AsyncFunction): Promise<any>;
    createBlock(blockPath: string, opts: blockCreateOpts): Promise<StorageBlock>;
    deleteBlock(blockPath: string): Promise<void>;
    getBlock(blockPath: string): StorageBlock;
    getAllBlocks(absPath: string): Promise<StorageBlock[]>;
    createCollection(absPath: string): Promise<StorageCollection>;
    getCollection(absPath: string): StorageCollection;
    getAllCollections(absPath: string): Promise<StorageCollection[]>;
    deleteCollection(absPath: string): Promise<void>;
}
