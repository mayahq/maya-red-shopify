"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpIoClient = void 0;
var axios_1 = __importDefault(require("axios"));
var block_1 = require("../../storage/block");
var collection_1 = require("../../storage/collection");
var remoteBlock_1 = require("../../storage/remote/remoteBlock");
var DEFAULT_BLOCK_OPTS = {
    encrypted: true,
    strict: false,
    recursive: true
};
var HttpIoClient = /** @class */ (function () {
    function HttpIoClient(_a) {
        var apiUrl = _a.apiUrl, headers = _a.headers;
        this.apiUrl = apiUrl;
        this.headers = headers;
    }
    HttpIoClient.prototype._executeOperation = function (op) {
        return __awaiter(this, void 0, void 0, function () {
            var method, request;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        method = 'POST';
                        request = {
                            method: method,
                            url: this.apiUrl,
                            data: op,
                            headers: __assign({}, this.headers)
                        };
                        return [4 /*yield*/, (0, axios_1.default)(request)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    HttpIoClient.prototype._lockAndGet = function (blockPath, query) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: blockPath, operation: 'lockAndGet', data: { query: query } };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                }
            });
        });
    };
    HttpIoClient.prototype._lockAndSet = function (blockPath, query, opts) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = {
                            path: blockPath,
                            operation: 'lockAndSet',
                            data: { query: query, opts: opts }
                        };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                }
            });
        });
    };
    HttpIoClient.prototype._lockAndUpdate = function (blockPath, query) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = {
                            path: blockPath,
                            operation: 'lockAndUpdate',
                            data: { query: query }
                        };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                }
            });
        });
    };
    HttpIoClient.prototype.readFromBlock = function (blockPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response, e_1, error;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: blockPath, operation: 'readFromBlock' };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 2:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                    case 3:
                        e_1 = _a.sent();
                        if (e_1.response) {
                            if (e_1.response.data.error.name === 'BLOCK_NOT_FOUND') {
                                error = new Error('Block not found');
                                error.name = 'BLOCK_NOT_FOUND';
                                throw error;
                            }
                        }
                        throw e_1;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    HttpIoClient.prototype.writeToBlock = function (blockPath, data) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response, e_2, error;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = {
                            path: blockPath,
                            operation: 'writeToBlock',
                            data: { payload: data }
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 2:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                    case 3:
                        e_2 = _a.sent();
                        if (e_2.response) {
                            if (e_2.response.data.error.name === 'BLOCK_NOT_FOUND') {
                                error = new Error('Block not found');
                                error.name = 'BLOCK_NOT_FOUND';
                                throw error;
                            }
                        }
                        throw e_2;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    HttpIoClient.prototype.createBlock = function (blockPath, opts) {
        if (opts === void 0) { opts = DEFAULT_BLOCK_OPTS; }
        return __awaiter(this, void 0, void 0, function () {
            var op;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = {
                            path: blockPath,
                            operation: 'createBlock',
                            data: { opts: opts }
                        };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, new remoteBlock_1.RemoteBlock({
                                absPath: blockPath,
                                io: this
                            })];
                }
            });
        });
    };
    HttpIoClient.prototype.deleteBlock = function (blockPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: blockPath, operation: 'deleteBlock' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HttpIoClient.prototype.getBlock = function (absPath) {
        return new remoteBlock_1.RemoteBlock({
            absPath: absPath,
            io: this
        });
    };
    HttpIoClient.prototype.getAllBlocks = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response, blockPaths;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'getAllBlocks' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        blockPaths = response.data;
                        return [2 /*return*/, blockPaths.map(function (b) { return new block_1.Block({
                                absPath: b.absPath,
                                io: _this
                            }); })];
                }
            });
        });
    };
    HttpIoClient.prototype.createCollection = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'createCollection' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, new collection_1.Collection({
                                absPath: absPath,
                                io: this
                            })];
                }
            });
        });
    };
    HttpIoClient.prototype.getCollection = function (absPath) {
        return new collection_1.Collection({
            absPath: absPath,
            io: this
        });
    };
    HttpIoClient.prototype.getAllCollections = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response, colPaths;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'getAllCollections' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        colPaths = response.data;
                        return [2 /*return*/, colPaths.map(function (c) { return new collection_1.Collection({
                                absPath: c.absPath,
                                io: _this
                            }); })];
                }
            });
        });
    };
    HttpIoClient.prototype.deleteCollection = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'deleteCollection' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    HttpIoClient.prototype.includesCollection = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'includesCollection' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                }
            });
        });
    };
    HttpIoClient.prototype.includesBlock = function (absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'includesBlock' };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, response.data.result];
                }
            });
        });
    };
    HttpIoClient.prototype.acquireLockOnBlock = function (blockPath, callback) {
        return __awaiter(this, void 0, void 0, function () {
            var lockOp, response, lockId, unlockOp, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        lockOp = { path: blockPath, operation: 'acquireLockOnBlock' };
                        return [4 /*yield*/, this._executeOperation(lockOp)];
                    case 1:
                        response = _a.sent();
                        lockId = response.data.lockId;
                        unlockOp = {
                            path: blockPath,
                            operation: 'releaseLock',
                            data: { lockId: lockId }
                        };
                        return [4 /*yield*/, callback(response.data.lockDocument)];
                    case 2:
                        result = _a.sent();
                        return [4 /*yield*/, this._executeOperation(unlockOp)];
                    case 3:
                        _a.sent();
                        return [2 /*return*/, result];
                }
            });
        });
    };
    HttpIoClient.prototype.ensureHierarchy = function (tree, absPath) {
        return __awaiter(this, void 0, void 0, function () {
            var op;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        op = { path: absPath, operation: 'ensureHierarchy', data: { tree: tree } };
                        return [4 /*yield*/, this._executeOperation(op)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return HttpIoClient;
}());
exports.HttpIoClient = HttpIoClient;
